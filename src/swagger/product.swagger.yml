Auth:
  name: Auth
  description: Auth service

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        password:
          type: string
        rut:
          type: string
        verified:
          type: boolean
        code:
          type: string
        blocked:
          type: boolean
        createdAt:
          type: Date
        updatedAt:
          type: Date

/login:
  post:
    tags:
      - Auth
    description: "Login"
    summary: "User login"
    produces:
      - "application/json"
    parameters:
      - in: body
        name: email
        type: string
        required: true
        description: "user's email"
      - in: body
        name: password
        type: string
        required: true
        description: "strong password"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
            required:
              - password
              - email
    responses:
      200:
        description: Login successful
        content:
          application/json:
            schema:
              properties:
                token:
                  type: string
                  example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0NzU2Y2E2ODg1NTgwMmMzNGUyM2QxNSIsImlhdCI6M"
                verified:
                  type: boolean
                  example: true

/register:
  post:
    tags:
      - Auth
    description: "Register"
    summary: "User register"
    consumes:
      - "application/json"
    produces:
      - "application/json"
    parameters:
      - in: body
        name: email
        type: string
        required: true
        description: "user's email"
      - in: body
        name: password
        type: string
        required: true
        description: "strong password"
      - in: body
        name: rut
        type: string
        required: true
        description: "user's rut"
      - in: body
        name: name
        type: string
        required: true
        description: "user's name"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              rut:
                type: string
              name:
                type: string
            required:
              - password
              - email
              - rut
              - name
    responses:
      201:
        description: Register successful
        content:
          application/json:
            schema:
              properties:
                userId:
                  type: string
                  example: "64756ca68855802c34e23d15"

/verify:
  post:
    tags:
      - Auth
    description: "Verify"
    summary: "User verify account"
    security:
      - BearerAuth: []
    consumes:
      - "application/json"
    produces:
      - "application/json"
    parameters:
      - in: body
        name: code
        type: string
        required: true
        description: "received code"
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                type: string
            required:
              - code
    responses:
      200:
        description: Verify successful
        content:
          application/json:
            schema:
              properties:
                result:
                  type: boolean
                  example: true
